//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImpostorHqR.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ImpostorHqR.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot;&gt;
        ///		&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///		&lt;title&gt;%label%&lt;/title&gt;
        ///
        ///		&lt;meta name=&quot;msapplication-TileColor&quot; content=&quot;#ffffff&quot;&gt;
        ///		&lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;&gt;
        ///			&lt;link rel=&quot;stylesheet&quot; href=&quot;water.css&quot;&gt;
        ///			&lt;link rel=&quot;stylesheet&quot; href=&quot;align.css&quot;&gt;
        ///			&lt;link rel=&quot;stylesheet&quot; href=&quot;header.css&quot;&gt;
        ///		&lt;style&gt;
        ///            html, body {
        ///                font-family: &apos;Open Sans&apos;, &apos;Lucida Grande&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, &apos;sans-s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphPageHtml {
            get {
                return ResourceManager.GetString("GraphPageHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var handle = &quot;%handle%&quot;;// replace
        ///var connection = null;
        ///var connectionState = 0;
        ///var url  = &quot;ws://&quot; + document.location.hostname + &quot;:%port%&quot;;// replace
        ///var titleInitial = &quot;%label%&quot;;
        ///
        ///%var%
        ///
        ///%ctx%
        ///
        ///function Authenticate() 
        ///{
        ///    document.getElementById(&quot;titleh1&quot;).innerHTML = &quot;ImpostorMin - Hang on, connecting to &quot; + titleInitial;
        ///    connection = new WebSocket(url);
        ///	connection.onopen = function(evt) 
        ///	{
        ///		// authenticate insecurely
        ///		var request = 
        ///		{
        ///			Handle: handle,
        ///			Secure: fal [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphPageMainJs {
            get {
                return ResourceManager.GetString("GraphPageMainJs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to var %varname% = new Chart(%ctx%, {
        ///	type: &apos;line&apos;,
        ///	data: {
        ///		datasets: [{
        ///			label: &apos;%label%&apos;,						// *
        ///			borderColor: &apos;%bcolor%&apos;,				// replace settings here
        ///			backgroundColor: &apos;%bgcolor%&apos;,			// *
        ///			lineTension: 0,								// *
        ///			borderDash: [8, 4]							// *
        ///	
        ///		}]
        ///	},
        ///	
        ///	options: {
        ///		responsive: true,
        ///		maintainAspectRatio: false,
        ///		scales: {
        ///			yAxes: [{
        ///				ticks: {
        ///					beginAtZero: true,
        ///					precision: 0
        ///				}
        ///			}],
        ///			xAxes: [
        ///			{
        ///				type: &apos;realtime&apos;,
        ///				realtime:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GraphSiteGrapgJs {
            get {
                return ResourceManager.GetString("GraphSiteGrapgJs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///		&lt;meta name=&quot;theme-color&quot; content=&quot;#ffffff&quot;&gt;
        ///		&lt;link rel=&quot;stylesheet&quot; href=&quot;water.css&quot;&gt;
        ///		&lt;style&gt;
        ///            html, body {
        ///                font-family: &apos;Open Sans&apos;, &apos;Lucida Grande&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, &apos;sans-serif&apos;, &apos;headerFont&apos;;
        ///                background-color: #141414;
        ///                max-width: none;
        ///            }
        ///
        ///			.container {
        ///				display: inline;
        ///			}
        ///
        ///			.container #text {
        ///				width: 80%;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OneWayConsoleHtmlFull {
            get {
                return ResourceManager.GetString("OneWayConsoleHtmlFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;style&gt;
        ///            html, body {
        ///                font-family: &apos;Open Sans&apos;, &apos;Lucida Grande&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, &apos;sans-serif&apos;, &apos;headerFont&apos;;
        ///                background-color: #141414;
        ///                max-width: none;
        ///            }
        ///
        ///			.container {
        ///				display: inline;
        ///			}
        ///
        ///			.container #text {
        ///				width: 80%;
        ///			}
        ///
        ///		
        ///            @font-face {
        ///                font-family: headerFont;
        ///                src: url(&apos;font/AlfaSlabOne-Regular.ttf&apos;) format(&apos;truetype&apos;);
        ///         [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SimpleApiPageFull {
            get {
                return ResourceManager.GetString("SimpleApiPageFull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;tr&gt;
        ///	&lt;td&gt;
        ///		%text%
        ///	&lt;/td&gt;
        ///&lt;/tr&gt;.
        /// </summary>
        internal static string TableSiteElement {
            get {
                return ResourceManager.GetString("TableSiteElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;/table&gt;
        ///		&lt;/div&gt;
        ///	  &lt;/div&gt;
        ///	&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string TableSiteEndHtml {
            get {
                return ResourceManager.GetString("TableSiteEndHtml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;style&gt;
        ///            html, body {
        ///                font-family: &apos;Open Sans&apos;, &apos;Lucida Grande&apos;, &apos;Arial&apos;, &apos;Helvetica&apos;, &apos;sans-serif&apos;, &apos;headerFont&apos;;
        ///                background-color: #141414;
        ///                max-width: none;
        ///            }
        ///
        ///			.container {
        ///				display: inline;
        ///			}
        ///
        ///				.container #text {
        ///					width: 80%;
        ///				}
        ///
        ///				.container .btn {
        ///					position: absolute;
        ///					right: -75px;
        ///					padding: 16px;
        ///				}
        ///            @font-face {
        ///                font-family: hea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TableSiteStartHtml {
            get {
                return ResourceManager.GetString("TableSiteStartHtml", resourceCulture);
            }
        }
    }
}
